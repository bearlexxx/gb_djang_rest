{"version":3,"sources":["components/ToDos.js","components/Project.js","components/User.js","components/Footer.js","components/Menu.js","components/Main.js","components/NotFound.js","components/Auth.js","components/TodoForm.js","components/ProjectForm.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoItem","_ref","todo","deleteTodoItem","react_default","a","createElement","text","user","onClick","id","type","ToDotList","_ref2","todos","authenticated","is_authenticated","className","map","ToDos_ToDoItem","href","ProjectToDoList","useParams","filtered_items","filter","item","project","length","ToDos","ProjectItem","deleteProjectItem","key","react_router_dom","to","name","users","link","ProjectList","_ref3","projects","_useState","useState","_useState2","Object","slicedToArray","data","setData","useEffect","Project_ProjectItem","onSearch","value","toLowerCase","includes","react_router","path","element","Project_ProjectToDoList","UserItem","username","first_name","last_name","email","UserList","User_UserItem","FooterContent","MenuContent","props","logout","MainPage","NotFound","LoginForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","login","password","event","setState","defineProperty","target","get_token","preventDefault","_this2","onSubmit","handleSubmit","placeholder","onChange","handleChange","React","Component","TodoForm","onFinish","values","createTodoItem","isFinish","onFinishFailed","errorInfo","console","log","for","ProjectForm","createProjectItem","App","authors","token","auth_login","cookies","Cookies","set","load_data","set_token","_this3","get","undefined","_this4","axios","post","then","response","catch","error","status","alert","headers","Content-Type","_this5","get_headers","results","_this6","concat","toConsumableArray","_this7","new_todo","project_obj","get_token_from_storage","_this8","Menu","Main","Project","components_ProjectForm","components_TodoForm","User","Auth","components_NotFound","Footer","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e9ec918c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ToDoItem = ({todo, deleteTodoItem}) => {\r\n   return (\r\n       <tr>\r\n           <td>\r\n               {todo.text}\r\n           </td>\r\n           <td>\r\n               {todo.user}\r\n           </td>\r\n           <td>\r\n                <button onClick={()=>deleteTodoItem(todo.id)} type='button'>Удалить</button>\r\n            </td>\r\n       </tr>\r\n   )\r\n}\r\n\r\nconst ToDotList = ({todos, deleteTodoItem, is_authenticated}) => {\r\n    const authenticated = is_authenticated();\r\n\r\n    return (\r\n\r\n       <table className=\"App-header\">\r\n            <thead>\r\n            <tr>\r\n                <th>\r\n                    text\r\n                </th>\r\n                <th>\r\n                    User\r\n                </th>\r\n            </tr>\r\n            </thead>\r\n           <tbody>\r\n                {todos.map((todo) => <ToDoItem todo={todo} deleteTodoItem={deleteTodoItem}/>)}\r\n           </tbody>\r\n           {authenticated ? <a href='/todos/create/'>Создать заметку</a> : ''}\r\n       </table>\r\n   )\r\n}\r\n\r\n\r\nexport default ToDotList;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {Link, Routes, Route, useParams} from \"react-router-dom\";\r\nimport ToDos from \"./ToDos\";\r\n\r\nconst ProjectToDoList = ({todos, is_authenticated}) => {\r\n    const {id} = useParams();\r\n    let filtered_items = todos.filter((item) => item.project === id)\r\n\r\n    if (filtered_items.length > 0) {\r\n        return (\r\n            <div>\r\n                Проект - {filtered_items[0]['project']['name']}\r\n                <ToDos todos={filtered_items} is_authenticated={() => is_authenticated()}/>\r\n            </div>\r\n        )\r\n    }\r\n    return <div>нет записей</div>\r\n};\r\n\r\n\r\n\r\nconst ProjectItem = ({project, deleteProjectItem}) => {\r\n    return (\r\n        <tr key={project.id}>\r\n            <td>\r\n                <Link to={project.id}>{project.name}</Link>\r\n            </td>\r\n            <td>\r\n                {project.users}\r\n            </td>\r\n            <td>\r\n                {project.link}\r\n            </td>\r\n            <td>\r\n                <button onClick={()=>deleteProjectItem(project.id)} type='button'>Удалить</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\nconst ProjectList = ({projects, todos, deleteProjectItem, is_authenticated}) => {\r\n    const [data, setData] = useState();\r\n    projects.map((project) => project.href = <Link to={project.id}>{project.name}</Link>)\r\n    projects.map((project) => project.key = project.id);\r\n\r\n    useEffect(() => {\r\n        if (typeof data !== 'object' && projects.length > 0) {\r\n            setData(projects);\r\n        }\r\n    });\r\n\r\n    const onSearch = value => {\r\n        projects = projects.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n        setData(projects);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"App-header\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>\r\n                            Project name\r\n                        </td>\r\n                        <th>\r\n                            Users\r\n                        </th>\r\n                        <th>\r\n                            Link\r\n                        </th>\r\n                        <td>\r\n                            Action\r\n                        </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {projects.map((project) => <ProjectItem project={project} deleteProjectItem={deleteProjectItem}/>)}\r\n                </tbody>\r\n                {is_authenticated() ?\r\n                <a href=\"/projects/create/\">Создать новый проект</a> : ''}\r\n                <div>\r\n                    <label>Поиск: </label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" onSearch={onSearch} />\r\n                </div>\r\n            </table>\r\n\r\n            <Routes>\r\n                {/*<Route path=\":id\" element={<ProjectToDoList/>}/>*/}\r\n                <Route path=\":id\" element={<ProjectToDoList todos={todos} is_authenticated={() => is_authenticated()}/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProjectList;\r\n","import React from 'react';\r\n\r\nconst UserItem = ({user}) => {\r\n    return (\r\n        <tr>\r\n            <td>\r\n                {user.username}\r\n            </td>\r\n            <td>\r\n                {user.first_name}\r\n            </td>\r\n            <td>\r\n                {user.last_name}\r\n            </td>\r\n            <td>\r\n                {user.email}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst UserList = ({users}) => {\r\n\r\n    return (\r\n        <table>\r\n            <th>\r\n                User name\r\n            </th>\r\n            <th>\r\n                First name\r\n            </th>\r\n            <th>\r\n                Last Name\r\n            </th>\r\n            <th>\r\n                E-mail\r\n            </th>\r\n            {users.map((user) => <UserItem user={user} />)}\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default UserList;\r\n","import React from 'react';\r\n\r\nconst FooterContent = () => {\r\n    return (\r\n        <div>\r\n            Information For You\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterContent;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst MenuContent = (props) => {\r\n    const is_authenticated = props.is_authenticated();\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li><Link to='/'>Главная</Link></li>\r\n                <li><Link to='/projects'>Список проектов</Link></li>\r\n                <li><Link to='/todos'>Список заметок</Link></li>\r\n                <li><Link to='/users'>Пользователи</Link></li>\r\n                <li>{is_authenticated ? <button onClick={() => props.logout()}>Выйти из </button> : <Link to='/login'>Войти</Link>}</li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default MenuContent;\r\n","import React from \"react\";\r\n\r\nconst MainPage = () => (\r\n  <div>\r\n    Training Project -= To Do =-\r\n  </div>\r\n)\r\n\r\nexport default MainPage;","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    Achtung! Alarm! Page nicht gefunden!\r\n  </div>\r\n)\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {login: '', password: ''}\r\n    }\r\n\r\n\r\n     handleChange(event) {\r\n//         console.log('change '+ event.target.name + ' = ' + event.target.value)\r\n         this.setState(\r\n             {\r\n                 [event.target.name]: event.target.value\r\n             }\r\n         );\r\n     }\r\n\r\n     handleSubmit(event) {\r\n//         console.log('Submit ' + this.state.login + ' ' + this.state.password)\r\n         this.props.get_token(this.state.login, this.state.password)\r\n         event.preventDefault()\r\n     }\r\n\r\n    render() {\r\n        return (\r\n          <form onSubmit={(event) => this.handleSubmit(event)}>\r\n            <input type=\"text\" name=\"login\" placeholder=\"login\" onChange={(event) => this.handleChange(event)} value={this.state.login}/>\r\n            <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={(event) => this.handleChange(event)} value={this.state.password}/>\r\n            <input type=\"submit\" value=\"Login\"/>\r\n          </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react'\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nclass TodoForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {text: '', project: props.projects, user: 0, isFinish: false}\r\n    }\r\n\r\n\r\n    onFinish = (values) => {\r\n        const is_auth = this.props.is_authenticated();\r\n        if (is_auth === false) {\r\n            this.onFinishFailed('Not auth');\r\n            return;\r\n        }\r\n        this.props.createTodoItem(values.text, values.project, values.user);\r\n        this.setState({'isFinish': true});\r\n    };\r\n\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isFinish === true) return <Navigate to=\"/todos\"/>\r\n\r\n        return (\r\n            <div>\r\n                <div>Новая заметка</div>\r\n\r\n                <form onSubmit={(event)=> this.handleSubmit(event)}>\r\n                    <div>\r\n                        <label for=\"todos\">Содержание</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"name\" value=\"Введите текст\" onChange={(event)=>this.handleChange(event)} />\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"project\">Проект</label>\r\n                        <select name=\"project\" className='form-control' onChange={(event)=>this.handleChange(event)}>\r\n                            {this.props.projects.map((item)=> <option value={item.id} key={item.id}>{item.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"user\">Пользователь</label>\r\n                        <select name=\"user\" className='form-control' onChange={(event)=>this.handleChange(event)}>\r\n                            {this.props.users.map((item)=> <option value={item.id} key={item.id}>{item.username}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoForm;","import React from 'react'\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nclass ProjectForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {isFinish: false}\r\n    }\r\n\r\n\r\n    onFinish = (values) => {\r\n        const is_auth = this.props.is_authenticated();\r\n        if (is_auth === false) {\r\n            this.onFinishFailed('Not auth');\r\n            return;\r\n        }\r\n        this.props.createProjectItem(values.name, values.link, values.user);\r\n        this.setState({'isFinish': true});\r\n    };\r\n\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    onSearch = value => {\r\n        console.log(value);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isFinish === true) return <Navigate to=\"/projects\"/>\r\n\r\n        return (\r\n            <div>\r\n                <div>Новый проект</div>\r\n\r\n                <form onSubmit={(event)=> this.handleSubmit(event)}>\r\n                    <div>\r\n                        <label for=\"name\">Название</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.name} onChange={(event)=>this.handleChange(event)} />\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"user\">Пользователь</label>\r\n                        <select name=\"user\" className='form-control' onChange={(event)=>this.handleChange(event)}>\r\n                            {this.props.users.map((item)=> <option value={item.id} key={item.id}>{item.username}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"link\">Ссылка</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"link\" value={this.state.name} onChange={(event)=>this.handleChange(event)} />\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" />\r\n                </form>\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default ProjectForm;","import React from 'react';\nimport axios from \"axios\";\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\nimport Cookies from 'universal-cookie';\nimport './App.css';\nimport ProjectList from \"./components/Project\";\nimport UserList from \"./components/User\";\nimport FooterContent from \"./components/Footer\";\nimport MenuContent from \"./components/Menu\";\nimport MainPage from \"./components/Main\";\nimport NotFound from \"./components/NotFound\";\nimport ToDos from \"./components/ToDos\";\nimport LoginForm from \"./components/Auth\";\nimport TodoForm from \"./components/TodoForm\";\nimport ProjectForm from \"./components/ProjectForm\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            'authors': [],\n            'users': [],\n            'projects': [],\n            'todos': [],\n            'token': '',\n            'auth_login': '',\n        }\n    }\n\n    set_token(token, auth_login) {\n        const cookies = new Cookies()\n        cookies.set('token', token)\n        cookies.set('auth_login', auth_login)\n        this.setState({'token': token}, ()=>this.load_data())\n        this.setState({'auth_login': auth_login})\n    }\n\n    is_authenticated() {\n        return this.state.token !== ''\n        // return true\n        // return this.state.token\n    }\n\n    logout() {\n        this.set_token('', '')\n    }\n\n    get_token_from_storage() {\n        const cookies = new Cookies()\n        const token = cookies.get('token')\n        const auth_login = cookies.get('auth_login')\n        if (token !== undefined) this.setState({'token': token}, ()=>this.load_data())\n        this.setState({'auth_login': auth_login})\n    }\n\n    get_token(username, password) {\n        console.log(username)\n        axios.post('http://127.0.0.1:8000/api-token-auth/', {\n            username: username,\n            password: password\n        })\n            .then(response => {\n                this.set_token(response.data['token'], username)\n                console.log(response.data)\n            }).catch(error => {\n            console.log(error);\n            if (error.response && error.response.status === 400) {\n                alert('Неверный логин или пароль')\n            } else {\n                alert('Неизвестная ошибка')\n            }\n        })\n    }\n\n    get_headers() {\n        let headers = {\n            'Content-Type': 'application/json'\n        }\n        if (this.is_authenticated()) {\n            headers['Authorization'] = 'Token ' + this.state.token\n        }\n        return headers\n    }\n\n    load_data() {\n        // const authors = [\n        //     {\n        //         'first_name': 'Фёдор',\n        //         'last_name': 'Достоевский',\n        //         'birthday_year': 1821\n        //     },\n        //     {\n        //         'first_name': 'Александр',\n        //         'last_name': 'Грин',\n        //         'birthday_year': 1880\n        //     },\n        // ]\n        // this.setState(\n        //     {\n        //         'authors': authors\n        //     }\n        // )\n        const headers = this.get_headers()\n\n        axios.get('http://127.0.0.1:8000/api/authors/',  {headers})\n            .then(response => {\n                const authors = response.data.results\n                this.setState(\n                    {\n                        'authors': authors\n                    }\n                )\n            }).catch(error => console.log(error))\n\n\n        axios.get('http://127.0.0.1:8000/api/users/',  {headers})\n            .then(response => {\n                const users = response.data.results\n                this.setState(\n                    {\n                        'users': users\n                    }\n                )\n            }).catch(error => console.log(error))\n\n        axios.get('http://127.0.0.1:8000/api/projects/',  {headers})\n            .then(response => {\n                const projects = response.data.results\n                // console.log(projects)\n                this.setState(\n                    {\n                        'projects': projects\n                    }\n                )\n            }).catch(error => console.log(error))\n\n        axios.get('http://127.0.0.1:8000/api/project_todos/',  {headers})\n            .then(response => {\n                const todos = response.data.results\n                this.setState(\n                    {\n                        'todos': todos\n                    }\n                )\n            }).catch(error => console.log(error))\n\n    }\n\n    deleteProjectItem(id) {\n//        const headers = this.get_headers()\n//        axios.delete('http://127.0.0.1:8000/api/projects/${id}/', {headers})\n//            .then(response => {\n//                this.setState({projects: this.state.projects.filter((item) => item.id !== id)})\n//            }).catch(error => console.log(error))\n    }\n\n    createProjectItem(name, link, user) {\n        const headers = this.get_headers()\n        const data = {name: name, link: link, users: user};\n        axios.post('http://127.0.0.1:8000/api/projects/', data, {headers})\n            .then(response => {\n                this.setState({projects: [...this.state.projects, response.data]});\n            }).catch(error => console.log(error))\n\n    }\n\n    deleteTodoItem(id) {\n//        const headers = this.get_headers()\n//        axios.delete('http://127.0.0.1:8000/api/project_todos/${id}/', {headers})\n//            .then(response => {\n//                this.setState({todos: this.state.todos.filter((item) => item.id !== id)})\n//            }).catch(error => console.log(error))\n    }\n\n    createTodoItem(text, project, user) {\n        const headers = this.get_headers()\n        const data = {text: text, project: project, user: user};\n        axios.post('http://127.0.0.1:8000/api/project_todos/', data, {headers})\n            .then(response => {\n                let new_todo = response.data;\n                const project_obj = this.state.projects.filter((item) => item.id === new_todo.project)[0];\n                new_todo.project = project_obj;\n                this.setState({todos: [new_todo, ...this.state.todos]});\n\n            }).catch(error => console.log(error))\n\n    }\n\n\n    componentDidMount() {\n        this.get_token_from_storage()\n    }\n\n    render() {\n\n        return (\n            <BrowserRouter>\n                <MenuContent is_authenticated={() => this.is_authenticated()} logout={() => this.logout()} auth_login={this.state.auth_login}/>\n                <main>\n                    <Routes>\n                       <Route path='/' element={<MainPage />} />\n                        <Route path='/projects/*' element={<ProjectList projects={this.state.projects}\n                            todos={this.state.todos} deleteProjectItem={(id) => this.deleteProjectItem(id)}\n                            is_authenticated={() => this.is_authenticated()}/>}\n                        />\n                        <Route path='/projects/create' element={<ProjectForm users={this.state.users} is_authenticated={() => this.is_authenticated()}\n                            createProjectItem={(text, project, user) => this.createProjectItem(text, project, user)}/>}\n                        />\n                        <Route path='/todos' element={<ToDos todos={this.state.todos}\n                            deleteTodoItem={(id) => this.deleteTodoItem(id)} is_authenticated={() => this.is_authenticated()}/>}\n                        />\n                        <Route path='/todos/create' element={<TodoForm projects={this.state.projects} users={this.state.users}\n                            is_authenticated={() => this.is_authenticated()} createTodoItem={(name, link, user) => this.createTodoItem(name, link, user)}/>}\n                        />\n                        <Route path='/users' element={<UserList users={this.state.users}/>} />\n                        <Route path='/login' element={<LoginForm get_token={(username, password) => this.get_token(username, password)}\n                            is_authenticated={() => this.is_authenticated()} />}/>\n                        <Route path=\"*\" element={<NotFound />} />\n                    </Routes>\n                </main>\n\n                <FooterContent/>\n            </BrowserRouter>\n\n        )\n    }\n}\n\nexport default App;\n\n// import logo from './logo.svg';\n// import './App.css';\n//\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload. <br/>Привет мир.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n//\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}